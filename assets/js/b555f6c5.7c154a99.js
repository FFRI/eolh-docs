"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[398],{7057:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"introducing-eolh","metadata":{"permalink":"/eolh-docs/blog/introducing-eolh","editUrl":"https://github.com/ffri/eolh-docs/tree/main/blog/2024-03-30-first-blog-post.md","source":"@site/blog/2024-03-30-first-blog-post.md","title":"Introducing Eolh","description":"We are very happy to introduce Eolh to bring security observability to Windows containers.","date":"2024-03-30T00:00:00.000Z","formattedDate":"March 30, 2024","tags":[{"label":"eolh","permalink":"/eolh-docs/blog/tags/eolh"}],"readingTime":1.965,"hasTruncateMarker":true,"authors":[{"name":"Yuki Mogi","title":"Basic Technology Research Department","url":"https://github.com/yuki-mogi-ffri","image_url":"https://github.com/yuki-mogi-ffri.png","imageURL":"https://github.com/yuki-mogi-ffri.png"}],"frontMatter":{"slug":"introducing-eolh","title":"Introducing Eolh","authors":{"name":"Yuki Mogi","title":"Basic Technology Research Department","url":"https://github.com/yuki-mogi-ffri","image_url":"https://github.com/yuki-mogi-ffri.png","imageURL":"https://github.com/yuki-mogi-ffri.png"},"tags":["eolh"]}},"content":"We are very happy to introduce Eolh to bring security observability to Windows containers.\\n\\n\x3c!--truncate--\x3e\\n\\nIn the cloud-native era, observability is gaining attention. In particular, eBPF is a core technology. Falco, Tracee and Tetragon are popular tools for security observability using eBPF.\\n\\nHowever, they can only be used with Linux container. There are two reasons why these cannot be used against Windows container.\\n\\nThe first reason is that there is no eBPF in Windows. Strictly speaking, this is not an accurate statement. Microsoft is trying to implement eBPF on Windows. However, to our knowledge, the implementation was still insufficient when Eolh was first created.\\n\\nThe second reason is the difference in structure between Linux and Windows. This creates differences in the information that can be obtained. For example, cgroup does not exist in Windows. Also, the proc directory does not exist in Windows.\\n\\nFor these reasons, achieving security observability in Windows containers required a different approach to the tools listed above. That is, Event Tracing for Windows (ETW).\\n\\nETW is a logging facility for Windows kernel and applications. Of particular note is that kernel information is logged like eBPF.\\n\\nCurrently, Eolh employs three ETW Providers: `Microsoft-Windows-Kernel-Process`, `Microsoft-Windows-Kernel-File` and `Microsoft-Windows-Kernel-Network`. Eolh can use the information from these ETW Providers to detect suspicious activity and also identify which pods and containers it is happening in. You can create custom detection rules in Rego or Go lang, although default detection rules are still few.\\n\\n## FAQ\\n\\n### What is the difference between Microsoft Log Monitor and Eolh? Why not use Log Monitor?\\n\\n[Log Monitor](https://github.com/microsoft/windows-container-tools/tree/aa6ea069f327ca1c63dfc0a672ca4e9ab41c989f/LogMonitor) is designed to be deployed inside a container alongside an application. In contrast, Eolh monitors containers from outside the container using kernel-level ETW logs. Log Monitor can do this as a hosted process, like Eolh, but Eolh can link ETW logs to information about each container. If you only need node ETW logs, it is recommended to deploy Log Monitor as a hosted process instead of Eolh.\\n\\n### Why was \\"Eolh\\" chosen as a name?\\n\\nEolh is a rune of protection and defense. So we adopted this as the name for Windows container protection and defense.\\n\\n## Community\\n\\nWe welcome your feedbacks and contributions. If you use Eolh and notice anything, get in touch with us.\\n\\n## Acknowledgements\\n\\nEolh is built on the foundation of Aqua Security\'s Tracee\'s code base.\\n\\n- [Tracee](https://aquasecurity.github.io/tracee/latest/)"}]}')}}]);